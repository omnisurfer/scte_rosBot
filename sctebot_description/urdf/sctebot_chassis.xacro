<?xml version='1.0'?>
<!--
https://answers.ros.org/question/192817/error-msg-the-root-link_base-has-an-inertia-specified-in-the-urdf-but-kdl/
http://gazebosim.org/tutorials?tut=ros_urdf
https://wiki.ros.org/action/fullsearch/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch?action=fullsearch&context=180&value=linkto%3A%22urdf%2FTutorials%2FBuilding+a+Visual+Robot+Model+with+URDF+from+Scratch%22
http://wiki.ros.org/xacro

http://wiki.ros.org/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch
http://wiki.ros.org/urdf/Tutorials/Building%20a%20Movable%20Robot%20Model%20with%20URDF

http://wiki.ros.org/urdf/XML/joint#Elements

-->

<!--
    Robot model adapted from https://github.com/CIR-KIT/steer_drive_ros/blob/kinetic-devel/steer_drive_controller/test/common/urdf/steerbot.xacro

    Geometry:
    The Ackermann steering sctebot_gazebo_plugins require the longitudinal
    separation between the front and back wheel axes and the
    lateral separation between the left and right front steering axes.

    For this model:
    wheel_separation_h = base_length - 2 * axle_offset = 0.442 - (2 * 0.05) = .342
    wheel_separation_w = base_width  + 2 * axle_offset = 0.442 + (2 * 0.05) = .542

    Modified from the steer_bot example found here: https://github.com/srmainwaring/steer_bot
-->

<!--Gazebo does not seem to like capital letters in the robot namespace-->
<robot name="sctebot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:arg name="robot_namespace" default="/"/>

    <!-- ackermann components and gazebo plugins -->
    <xacro:include filename="$(find sctebot_description)/urdf/plugins/sctebot_plugins.gazebo" />
    <xacro:include filename="$(find sctebot_description)/urdf/sctebot_wheel.xacro"/>
    <xacro:include filename="$(find sctebot_description)/urdf/sctebot_inertials.xacro"/>

    <xacro:include filename="$(find sctebot_description)/urdf/sctebot_materials.xacro"/>

    <!-- sensor gazebo plugins -->
    <xacro:include filename="$(find sctebot_description)/urdf/plugins/sctebot_sensors.gazebo" />

    <!-- physical components -->

    <!-- Math constants -->
    <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>

    <!-- Robot base dimensions -->
    <xacro:property name="base_length" value="0.442" /> <!-- wheel base derived from this -->
    <xacro:property name="base_width" value="0.157" /> <!-- wheel track derived from this -->
    <xacro:property name="base_height" value="0.01" />
    <xacro:property name="base_mass" value="5" />

    <!-- Wheel link dimensions -->
    <xacro:property name="wheel_radius" value="0.0525" />
    <xacro:property name="wheel_thickness" value="0.048" />
    <xacro:property name="wheel_mass" value="1" />

    <!-- Steering link dimensions -->
    <xacro:property name="steer_radius" value="0.005" />
    <xacro:property name="steer_thickness" value="0.02" />
    <xacro:property name="steer_mass" value="1" />

    <!-- Axle positions -->
    <xacro:property name="axle_offset" value="0.05" />
    <xacro:property name="steer_offset" value="0.02" />

    <!-- scte dims -->
    <xacro:property name="scte_chassis_length_sq" value="${base_length * base_length}"/>
    <xacro:property name="scte_chassis_width_sq" value="${base_width * base_width}"/>
    <xacro:property name="scte_chassis_height_sq" value="${base_height * base_height}"/>

    <!-- base footprint for nav -->
    <link name='base_footprint'/>

    <joint name="base_link_TO_base_footprint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="base_footprint"/>
        <child link="base_link"/>
    </joint>

    <!-- Base link -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <material name="green" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <!--xacro:solid_cuboid_inertial
                rpy="0 0 0" xyz="0 0 0"
                mass="${base_mass}"
                x="${base_length}" y="${base_width}" z="${base_height}" /-->
    </link>

    <!-- Inertial link stores the robot's inertial information -->
    <link name="inertial_link">
        <inertial>
            <mass value="${base_mass}" />
            <origin xyz="0 0 0" />
            <inertia ixx="${(1/12 * base_mass) * (scte_chassis_height_sq + scte_chassis_width_sq)}" ixy="0" ixz="0"
                     iyy="${(1/12 * base_mass) * (scte_chassis_height_sq + scte_chassis_length_sq)}" iyz="0"
                     izz="${(1/12 * base_mass) * (scte_chassis_length_sq + scte_chassis_width_sq)}" />
        </inertial>
    </link>

    <joint name="inertial_to_base_link_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="inertial_link" />
    </joint>

    <!-- Front steer and rear wheel joints required for ackermann_steering_controller -->
    <xacro:front_steer
            name="front"
            parent="base"
            steer_radius="${steer_radius}"
            steer_thickness="${steer_thickness}"
            steer_mass="${steer_mass}"
            base_length="${base_length}"
            base_width="${base_width}"
            axle_offset="${axle_offset}"
            steer_height="${wheel_radius+steer_offset}">
    </xacro:front_steer>

    <xacro:rear_wheel
            name="rear"
            parent="base"
            wheel_radius="${wheel_radius/4}"
            wheel_thickness="${wheel_thickness/2}"
            wheel_mass="${wheel_mass/32}">
        <origin xyz="${-base_length/2+axle_offset} 0 0" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:rear_wheel>

    <!-- Steerable front wheels -->
    <xacro:front_wheel_lr
            name="front_right"
            parent="base"
            reflect="-1"
            wheel_radius="${wheel_radius}"
            wheel_thickness="${wheel_thickness}"
            wheel_mass="${wheel_mass}"
            steer_radius="${steer_radius}"
            steer_thickness="${steer_thickness}"
            steer_mass="${steer_mass}"
            base_length="${base_length}"
            base_width="${base_width}"
            axle_offset="${axle_offset}"
            steer_height="${wheel_radius+steer_offset}">
    </xacro:front_wheel_lr>
    <xacro:front_wheel_lr
            name="front_left"
            parent="base"
            reflect="1"
            wheel_radius="${wheel_radius}"
            wheel_thickness="${wheel_thickness}"
            wheel_mass="${wheel_mass}"
            steer_radius="${steer_radius}"
            steer_thickness="${steer_thickness}"
            steer_mass="${steer_mass}"
            base_length="${base_length}"
            base_width="${base_width}"
            axle_offset="${axle_offset}"
            steer_height="${wheel_radius+steer_offset}">
    </xacro:front_wheel_lr>

    <!-- Rear wheels -->
    <xacro:rear_wheel_lr
            name="rear_right"
            parent="base"
            wheel_radius="${wheel_radius}"
            wheel_thickness="${wheel_thickness}"
            wheel_mass="${wheel_mass}">
        <origin xyz="${-base_length/2+axle_offset} ${-base_width/2-axle_offset} 0" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:rear_wheel_lr>
    <xacro:rear_wheel_lr
            name="rear_left"
            parent="base"
            wheel_radius="${wheel_radius}"
            wheel_thickness="${wheel_thickness}"
            wheel_mass="${wheel_mass}">
        <origin xyz="${-base_length/2+axle_offset} ${+base_width/2+axle_offset} 0" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:rear_wheel_lr>


    <!-- Bumpers -->
    <xacro:include filename="sctebot_front_bumper.xacro"/>
    <xacro:scte_front_bumper
            link_name="front_bumper"
            parent_link="base_link"
            front_skid_plate_size="0.07 0.07 ${0.0105}"
            front_skid_plate_joint_xyz="${base_length * 0.5} 0 ${0.07 * 0.30}"
            front_skid_plate_joint_rpy="0 ${pi/-6}  0"
            front_bumper_size="0.01 0.175 0.05"
    />

    <xacro:include filename="sctebot_rear_bumper.xacro"/>
    <xacro:scte_rear_bumper
            link_name="rear_bumper"
            parent_link="base_link"
            rear_bumper_size="0.01 0.255 0.05"
            rear_bumper_mount_size="0.09 0.05 0.05"
            rear_bumper_mount_joint_xyz="${base_length * -0.6} 0 ${0.105 * 0.5}"
            rear_bumper_mount_joint_rpy="0 0 0"
    />

    <!-- Sensors and Compute Hardware -->
    <xacro:include filename="$(find sctebot_description)/urdf/equipment/computer_enclosure.xacro"/>
    <xacro:computer_enclosure
            link_name="computer_enclosure"
            parent_link="base_link"
            enclosure_origin="0 0 0.105"
            enclosure_rpy="0 0 0"
    />

    <xacro:include filename="$(find sctebot_description)/urdf/equipment/camera_rig.xacro"/>
    <xacro:camera_rig
            link_name="camera_rig"
            parent_link="computer_enclosure"
            camera_rig_origin="${0.260 * -0.45} 0 ${0.06 * 1.0}"
            camera_rig_rpy="0 0 0"
    />

    <!-- Sim IMU -->
    <link name="imu_link"/>
    <joint name="imu_link_TO_computer_enclosure" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="computer_enclosure"/>
        <child link="imu_link"/>
    </joint>

    <!-- LIDAR -->
    <!--link name="base_laser"/-->
    <xacro:include filename="$(find ydlidar_ros)/urdf/ydlidar.urdf"/>
    <joint name="ydlidar_base_TO_computer_enclosure" type="fixed">
        <origin xyz="0.090 0 0.0305" rpy="0 0 0"/>
        <parent link="computer_enclosure"/>
        <child link="base_laser"/>
    </joint>

    <!-- Cameras -->
    <!--
        https://answers.ros.org/question/9840/how-do-you-get-stereo_image_proc-to-include-a-frame_id-so-that-rviz-will-accept-the-point-cloud-messages/
        - stereo projection/point cloud uses the left cameras frame_id to determine how to draw the image
        may need to use image_rect for the video to align with the model
        https://berndpfrommer.github.io/tagslam_web/visualization/
    -->
    <!--TODO drowan_20210117_BUG: The cameras are mounted sideways. Need to fix camera link and/or optical link...-->
    <!---->
    <xacro:include filename="$(find logitech_c270_camera)/urdf/logitech_c270.xacro"/>
    <xacro:logitech_c270_camera parent_link="camera_rig_bar" camera_link="driver_side_camera" joint_xyz="0.0 0.05 ${0.025 * 0.5}" joint_rpy="0 0 0"/>
    <xacro:logitech_c270_camera parent_link="camera_rig_bar" camera_link="passenger_side_camera" joint_xyz="0.0 -0.05 ${0.025 * 0.5}" joint_rpy="0 0 0"/>
    <!---->

    <!-- Colour -->
    <gazebo reference="base_link">
        <material>Gazebo/Green</material>
    </gazebo>

</robot>