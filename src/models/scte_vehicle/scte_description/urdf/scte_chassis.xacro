<?xml version='1.0'?>
<!--
https://answers.ros.org/question/192817/error-msg-the-root-link_base-has-an-inertia-specified-in-the-urdf-but-kdl/
http://gazebosim.org/tutorials?tut=ros_urdf
https://wiki.ros.org/action/fullsearch/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch?action=fullsearch&context=180&value=linkto%3A%22urdf%2FTutorials%2FBuilding+a+Visual+Robot+Model+with+URDF+from+Scratch%22
http://wiki.ros.org/xacro

http://wiki.ros.org/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch
http://wiki.ros.org/urdf/Tutorials/Building%20a%20Movable%20Robot%20Model%20with%20URDF

http://wiki.ros.org/urdf/XML/joint#Elements

-->
<!--Gazebo does not seem to like capital letters in the robot namespace-->
<robot name="sctebot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:arg name="robot_namespace" default="/DEFAULTNAMESPACE2"/>
    <xacro:arg name="tf_freq" default="100.0"/>
    <xacro:arg name="pub_tf" default="false"/>

    <xacro:property name="M_PI" value="3.14159265358979323846264338327950288"/>

    <xacro:include filename="plugins/scte_plugins.gazebo" />
    <xacro:include filename="$(find scte_description)/urdf/materials.xacro" />
    <xacro:include filename="$(find scte_description)/urdf/macros.xacro" />

    <xacro:include filename="$(find ydlidar_ros)/urdf/ydlidar.urdf"/>
    <xacro:include filename="$(find logitech_c270_camera)/urdf/logitech_c270.xacro"/>

    <xacro:include filename="$(find scte_description)/urdf/equipment/mounting_bars.xacro"/>
    <xacro:include filename="$(find scte_description)/urdf/equipment/computer_enclosure.xacro"/>
    <xacro:include filename="$(find scte_description)/urdf/equipment/camera_rig.xacro"/>

    <xacro:property name="scte_chassis_mass" value="2.9"/>
    <xacro:property name="scte_chassis_length" value="0.292"/>
    <xacro:property name="scte_chassis_width" value="0.165"/>
    <xacro:property name="scte_chassis_depth" value="0.00635"/>
    <xacro:property name="scte_chassis_length_sq" value="${scte_chassis_length * scte_chassis_length}"/>
    <xacro:property name="scte_chassis_width_sq" value="${scte_chassis_width * scte_chassis_width}"/>
    <xacro:property name="scte_chassis_depth_sq" value="${scte_chassis_depth * scte_chassis_depth}"/>

    <!--Wheel Properties-->
    <xacro:property name="wheel_mass" value="0.3"/>
    <!--xacro:property name="wheel_radius" value="0.0525"/-->
    <!--xacro:property name="wheel_length" value="0.045"/-->
    <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>

    <!-- Constants for robot dimensions -->
    <xacro:property name="wheel_radius" value="0.0525" /> <!-- Link 1 -->
    <xacro:property name="wheel_thickness" value="0.045" /> <!-- Link 2 -->
    <xacro:property name="wheel_length" value="0.47" /> <!-- separation between wheels? -->
    <xacro:property name="wheel_width" value="${0.20 - wheel_thickness}" /> <!-- separation between wheels? -->
    <xacro:property name="axel_offset" value="0.05" /> <!-- Space btw top of beam and the each joint -->
    <xacro:property name="steer_offset" value="0.02" /> <!-- Link 1 -->

    <xacro:property name="shock_tower_height" value="0.105"/>
    <xacro:property name="shock_tower_width" value="0.14"/>

    <xacro:property name="drive_axle_length" value="0.25"/>
    <xacro:property name="drive_axle_radius" value="0.005"/>

    <link name='base_footprint'/>

    <joint name="base_link_TO_base_footprint" type="fixed">
        <origin xyz="${scte_chassis_length * 0.63} 0 ${wheel_radius - scte_chassis_depth - 0.0075}" rpy="0 0 0"/>
        <parent link="base_footprint"/>
        <child link="base_link"/>
    </joint>

    <link name='base_link'>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${scte_chassis_length} ${scte_chassis_width} ${scte_chassis_depth}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${scte_chassis_length} ${scte_chassis_width} ${scte_chassis_depth}"/>
            </geometry>
        </collision>
    </link>

    <!-- Inertial link stores the robot's inertial information -->
    <link name="inertial_link">
        <inertial>
            <mass value="${scte_chassis_mass}" />
            <origin xyz="0 0 0" />
            <inertia ixx="${(1/12 * scte_chassis_mass) * (scte_chassis_depth_sq + scte_chassis_width_sq)}" ixy="0" ixz="0"
                     iyy="${(1/12 * scte_chassis_mass) * (scte_chassis_depth_sq + scte_chassis_length_sq)}" iyz="0"
                     izz="${(1/12 * scte_chassis_mass) * (scte_chassis_length_sq + scte_chassis_width_sq)}" />
        </inertial>
    </link>

    <joint name="inertial_to_base_link_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="inertial_link" />
    </joint>

    <!--CHASSIS-->
    <link name="scte_chassis"/>

    <joint name="scte_chassis_to_base_link_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="scte_chassis"/>
    </joint>

    <!---->
    <xacro:include filename="$(find scte_description)/urdf/scte_diff_and_shock_tower.xacro"/>
    <xacro:scte_diff_and_shock_tower link_name="front_diff_tower"
                                parent_link="scte_chassis"
                                diff_joint_xyz="${scte_chassis_length * 0.63} 0 0"
                                diff_joint_rpy="0 0 0"
                                diff_plate_size="0.07 0.07 ${scte_chassis_depth}"

                                shock_tower_size="0.015 ${shock_tower_width} ${shock_tower_height}"
                                shock_tower_joint_origin="0 0 ${shock_tower_height * 0.5}"
                                shock_tower_joint_rpy="0 0 0"
    />
    <xacro:scte_diff_and_shock_tower link_name="rear_diff_tower"
                                     parent_link="scte_chassis"
                                     diff_joint_xyz="${scte_chassis_length * -0.63} 0 0"
                                     diff_joint_rpy="0 0 0"
                                     diff_plate_size="0.07 0.07 ${scte_chassis_depth}"

                                     shock_tower_size="0.015 ${shock_tower_width} ${shock_tower_height}"
                                     shock_tower_joint_origin="0 0 ${shock_tower_height * 0.5}"
                                     shock_tower_joint_rpy="0 0 0"
    />

    <!--TODO get rid of some of these magic number parameters -->
    <xacro:include filename="$(find scte_description)/urdf/scte_front_bumper.xacro"/>
    <xacro:scte_front_bumper link_name="front_bumper"
                             parent_link="front_diff_tower"
                             front_skid_plate_size="0.07 0.07 ${scte_chassis_depth}"
                             front_skid_plate_joint_xyz="${0.07} 0 ${0.07 * 0.30}"
                             front_skid_plate_joint_rpy="0 ${M_PI/-6}  0"
                             front_bumper_size="0.01 0.175 0.05"
    />

    <xacro:include filename="$(find scte_description)/urdf/scte_rear_bumper.xacro"/>
    <xacro:scte_rear_bumper link_name="rear_bumper"
                            parent_link="rear_diff_tower"
                            rear_bumper_size="0.01 0.255 0.05"
                            rear_bumper_mount_size="0.09 0.05 0.05"
                            rear_bumper_mount_joint_xyz="${0.09 * -0.6} 0 ${shock_tower_height * 0.5}"
                            rear_bumper_mount_joint_rpy="0 0 0"
    />

    <xacro:include filename="$(find scte_description)/urdf/scte_drive_axle.xacro"/>
    <xacro:scte_drive_axle link_name="front_axle"
                     parent_link="front_diff_tower"
                     drive_axle_radius="${drive_axle_radius}"
                     drive_axle_length="${drive_axle_length}"
                     drive_axle_joint_xyz="0 0 ${0.03 * 0.5}"
                     drive_axle_joint_rpy="${M_PI * -0.5} 0 0"
    />
    <xacro:include filename="$(find scte_description)/urdf/scte_drive_axle.xacro"/>
    <xacro:scte_drive_axle link_name="rear_axle"
                           parent_link="rear_diff_tower"
                           drive_axle_radius="${drive_axle_radius}"
                           drive_axle_length="${drive_axle_length}"
                           drive_axle_joint_xyz="0 0 ${0.03 * 0.5}"
                           drive_axle_joint_rpy="${M_PI * -0.5} 0 0"
    />

    <!-- Wheel macros for audio bot implementation
    <xacro:include filename="$(find scte_description)/urdf/scte_wheel.xacro"/>
    <xacro:scte_wheel link_name="front_left_wheel"
                      parent_link="front_axle"
                      wheel_radius="${wheel_radius}"
                      wheel_length="${wheel_length}"
                      wheel_joint_origin="0 0 ${drive_axle_length * 0.5}"
                      wheel_joint_rpy="${M_PI * -0.5} 0 0"
                      wheel_joint_name="front_left_wheel_TO_front_axle"
                      wheel_steer_joint_name="front_left_wheel_steer_TO_front_axle"
                      is_steerable="true"
                      flip="1"
    />
    <xacro:scte_wheel link_name="front_right_wheel"
                      parent_link="front_axle"
                      wheel_radius="${wheel_radius}"
                      wheel_length="${wheel_length}"
                      wheel_joint_origin="0 0 ${drive_axle_length * -0.5}"
                      wheel_joint_rpy="${M_PI * -0.5} 0 0"
                      wheel_joint_name="front_right_wheel_TO_front_axle"
                      wheel_steer_joint_name="front_right_wheel_steer_TO_front_axle"
                      is_steerable="true"
                      flip="-1"
    />

    <xacro:scte_wheel link_name="rear_left_wheel"
                      parent_link="rear_axle"
                      wheel_radius="${wheel_radius}"
                      wheel_length="${wheel_length}"
                      wheel_joint_origin="0 0 ${drive_axle_length * 0.5}"
                      wheel_joint_rpy="0 0 0"
                      wheel_joint_name="rear_left_wheel_TO_rear_axle"
                      wheel_steer_joint_name=""
                      is_steerable="false"
                      flip="1"
    />
    <xacro:scte_wheel link_name="rear_right_wheel"
                      parent_link="rear_axle"
                      wheel_radius="${wheel_radius}"
                      wheel_length="${wheel_length}"
                      wheel_joint_origin="0 0 ${drive_axle_length * -0.5}"
                      wheel_joint_rpy="0 0 0"
                      wheel_joint_name="rear_right_wheel_TO_rear_axle"
                      wheel_steer_joint_name=""
                      is_steerable="false"
                      flip="1"
    />
    -->

    <xacro:include filename="$(find scte_description)/urdf/scte_wheel.xacro"/>
    <!-- joints for ackermann_steering_controller -->
    <xacro:front_steer name="front" parent="base" radius="${wheel_radius}" thickness="${wheel_thickness}"
                       length="${wheel_length}" width="${wheel_width}" axel_offset="${axel_offset}" steer_height="${wheel_radius+steer_offset}">
        <origin xyz="${wheel_length/2-axel_offset} 0 0" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:front_steer>
    <xacro:rear_wheel name="rear" parent="base" radius="${wheel_radius}" thickness="${wheel_thickness}">
        <origin xyz="${-wheel_length/2+axel_offset} 0 0" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:rear_wheel>

    <!-- Wheels -->
    <xacro:front_wheel_lr name="front_right" parent="base" radius="${wheel_radius}" thickness="${wheel_thickness}"
                          length="${wheel_length}" width="${wheel_width}" axel_offset="${axel_offset}" right_left="1" steer_height="${wheel_radius+steer_offset}">
        <origin xyz="${wheel_length/2-axel_offset} ${wheel_width/2+axel_offset} 0" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:front_wheel_lr>
    <xacro:front_wheel_lr name="front_left" parent="base" radius="${wheel_radius}" thickness="${wheel_thickness}"
                          length="${wheel_length}" width="${wheel_width}" axel_offset="${axel_offset}" right_left="-1" steer_height="${wheel_radius+steer_offset}">
        <origin xyz="${wheel_length/2-axel_offset} ${-wheel_width/2-axel_offset} ${scte_chassis_depth * -0.5}" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:front_wheel_lr>
    <xacro:rear_wheel_lr name="rear_right" parent="base" radius="${wheel_radius}" thickness="${wheel_thickness}">
        <origin xyz="${-wheel_length/2+axel_offset} ${wheel_width/2+axel_offset} ${scte_chassis_depth * -0.5}" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:rear_wheel_lr>
    <xacro:rear_wheel_lr name="rear_left" parent="base" radius="${wheel_radius}" thickness="${wheel_thickness}">
        <origin xyz="${-wheel_length/2+axel_offset} ${-wheel_width/2-axel_offset} ${scte_chassis_depth * -0.5}" rpy="${-90 * deg_to_rad} 0 0"/>
    </xacro:rear_wheel_lr>


    <xacro:mounting_bar link_name="driver_mounting_bar"
                        parent_link="front_diff_tower"
                        bar_origin="${scte_chassis_length * -0.63} ${shock_tower_width * 0.5} ${shock_tower_height * 1.0}"
                        bar_rpy="0 0 0"
    />

    <xacro:mounting_bar link_name="passenger_mounting_bar"
                        parent_link="front_diff_tower"
                        bar_origin="${scte_chassis_length * -0.63} ${shock_tower_width * -0.5} ${shock_tower_height * 1.0}"
                        bar_rpy="0 0 0"
    />

    <xacro:computer_enclosure link_name="computer_enclosure"
                              parent_link="driver_mounting_bar"
                              enclosure_origin="0 ${(scte_chassis_width * -0.5) + (0.025 * 0.5)} ${0.06 * 0.5}"
                              enclosure_rpy="0 0 0"
    />

    <xacro:camera_rig link_name="camera_rig"
                      parent_link="computer_enclosure"
                      camera_rig_origin="${0.260 * -0.45} 0 ${0.06 * 1.0}"
                      camera_rig_rpy="0 0 0"
    />

    <!-- Sim IMU -->
    <link name="imu_link"/>
    <joint name="imu_link_TO_computer_enclosure" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="computer_enclosure"/>
        <child link="imu_link"/>
    </joint>

    <!-- LIDAR -->
    <!--link name="base_laser"/-->
    <joint name="ydlidar_base_TO_computer_enclosure" type="fixed">
        <origin xyz="0.090 0 0.0305" rpy="0 0 0"/>
        <parent link="computer_enclosure"/>
        <child link="base_laser"/>
    </joint>

    <!-- Cameras -->
    <!--
        https://answers.ros.org/question/9840/how-do-you-get-stereo_image_proc-to-include-a-frame_id-so-that-rviz-will-accept-the-point-cloud-messages/
        - stereo projection/point cloud uses the left cameras frame_id to determine how to draw the image
        may need to use image_rect for the video to align with the model
        https://berndpfrommer.github.io/tagslam_web/visualization/
    -->
    <!--TODO drowan_20210117_BUG: The cameras are mounted sideways. Need to fix camera link and/or optical link...-->
    <!---->
    <xacro:logitech_c270_camera parent_link="camera_rig_bar" camera_link="driver_side_camera" joint_xyz="0.0 0.05 ${0.025 * 0.5}" joint_rpy="0 0 0"/>
    <xacro:logitech_c270_camera parent_link="camera_rig_bar" camera_link="passenger_side_camera" joint_xyz="0.0 -0.05 ${0.025 * 0.5}" joint_rpy="0 0 0"/>
    <!---->

</robot>