<?xml version='1.0'?>
<!--
https://answers.ros.org/question/192817/error-msg-the-root-link_base-has-an-inertia-specified-in-the-urdf-but-kdl/
http://gazebosim.org/tutorials?tut=ros_urdf
https://wiki.ros.org/action/fullsearch/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch?action=fullsearch&context=180&value=linkto%3A%22urdf%2FTutorials%2FBuilding+a+Visual+Robot+Model+with+URDF+from+Scratch%22
http://wiki.ros.org/xacro

http://wiki.ros.org/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch
http://wiki.ros.org/urdf/Tutorials/Building%20a%20Movable%20Robot%20Model%20with%20URDF

http://wiki.ros.org/urdf/XML/joint#Elements

-->
<!--Gazebo does not seem to like capital letters in the robot namespace-->
<robot name="sctebot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:arg name="robot_namespace" default="/" />

    <xacro:property name="M_PI" value="3.14159265358979323846264338327950288"/>

    <!--xacro:include filename="$(find scte_description)/urdf/scte.gazebo" /-->
    <xacro:include filename="$(find scte_description)/urdf/materials.xacro" />
    <xacro:include filename="$(find scte_description)/urdf/macros.xacro" />

    <link name="base_link">
        
    </link>

    <joint name="base_link" type="fixed">
        <origin xyz="0 0.0 0.0" rpy="0 -0 0"/>
        <parent link="base_link"/>
        <child link="scte_chassis"/>
    </joint>

    <!--DEBUG test link for odom testing-->
    <!--
    <link name="test_real_link">
        <inertial>
            <mass value="1.0"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                    ixx="1" ixy="0" ixz="0"
                    iyy="1" iyz="0"
                    izz="1"
            />
        </inertial>
        <visual name='visual'>
            <transparency>1</transparency>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.075 0.075 0.075"/>
            </geometry>
            <material name="none1">
                <color rgba="${255/255} ${0/255} ${0/255} 1.0"/>
            </material>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.075 0.075 0.075"/>
            </geometry>
        </collision>
    </link>
    <joint name="odom_test" type="fixed">
        <origin xyz="0 0.0 1.0" rpy="0 0 0"/>
        <parent link="scte_chassis"/>
        <child link="test_real_link"/>
    </joint>
    -->
    <!--DEBUG test link for odom testing-->

    <!--CHASSIS-->
    <xacro:property name="scte_total_mass" value="50"/>

    <xacro:property name="scte_chassis_length" value="0.292"/>
    <xacro:property name="scte_chassis_width" value="0.165"/>
    <xacro:property name="scte_chassis_depth" value="0.00635"/>            
    
    <link name='scte_chassis'>
        <!-- borrowed from husky for debug-->
        <inertial>
            <mass value="${scte_total_mass * 0.86}"/>
            <origin xyz="-0.00065 -0.085 0.062" rpy="0 0 0"/>
            <inertia
                    ixx="0.6022" ixy="-0.02364" ixz="-0.1197"
                    iyy="1.7386" iyz="-0.001544"
                    izz="2.0296"
            />
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${scte_chassis_length} ${scte_chassis_width} ${scte_chassis_depth}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${scte_chassis_length} ${scte_chassis_width} ${scte_chassis_depth}"/>
            </geometry>
        </collision>
    </link>

    <xacro:include filename="$(find scte_description)/urdf/scte_axle_components.xacro"/>
    <xacro:property name="drive_axle_length" value="0.25"/>
    <xacro:property name="drive_axle_radius" value="0.005"/>
    
    <xacro:property name="shock_tower_height" value="0.105"/>
    <xacro:property name="shock_tower_width" value="0.14"/>
    
    <xacro:scte_axle_components suffix="front"
        parent_link="scte_chassis" 
        diff_joint_xyz="${scte_chassis_length * 0.63} 0 0" 
        diff_joint_rpy="0 0 0" 
        diff_plate_size="0.07 0.07 ${scte_chassis_depth}"
        
        drive_axle_radius="${drive_axle_radius}"
        drive_axle_length="${drive_axle_length}"
        drive_axle_joint_origin="0 0 ${0.03 * 0.5}"
        drive_axle_joint_rpy="${M_PI/2} 0 0"
        
        shock_tower_size="0.015 ${shock_tower_width} ${shock_tower_height}"
        shock_tower_joint_origin="0 0 ${shock_tower_height * 0.5}"
        shock_tower_joint_rpy="0 0 0"
        
        left_wheel_radius="0.05"
        left_wheel_length="0.045"
        left_wheel_joint_origin="0 0 ${drive_axle_length * 0.5}"
        left_wheel_joint_rpy="0 0 0"
        
        right_wheel_radius="0.05"
        right_wheel_length="0.045"
        right_wheel_joint_origin="0 0 ${drive_axle_length * -0.5}"
        right_wheel_joint_rpy="0 0 0"
    />
    <xacro:scte_axle_components suffix="rear"
        parent_link="scte_chassis" 
        diff_joint_xyz="${scte_chassis_length * -0.63} 0 0" 
        diff_joint_rpy="0 0 0" 
        diff_plate_size="0.07 0.07 ${scte_chassis_depth}"
        
        drive_axle_radius="${drive_axle_radius}"
        drive_axle_length="${drive_axle_length}"
        drive_axle_joint_origin="0 0 ${0.03 * 0.5}"
        drive_axle_joint_rpy="${M_PI/2} 0 0"
        
        shock_tower_size="0.015 ${shock_tower_width} ${shock_tower_height}"
        shock_tower_joint_origin="0 0 ${shock_tower_height * 0.5}"
        shock_tower_joint_rpy="0 0 0"
        
        left_wheel_radius="0.05"
        left_wheel_length="0.045"
        left_wheel_joint_origin="0 0 ${drive_axle_length * 0.5}"
        left_wheel_joint_rpy="0 0 0"
        
        right_wheel_radius="0.05"
        right_wheel_length="0.045"
        right_wheel_joint_origin="0 0 ${drive_axle_length * -0.5}"
        right_wheel_joint_rpy="0 0 0"
    />         
    <!--/CHASSIS-->
    
    <!--MOUNTING BARS-->
    <!---->
    <xacro:property name="mounting_bars_length" value="0.45"/>
    <xacro:property name="mounting_bars_width" value="0.025"/>
    <xacro:property name="mounting_bars_depth" value="0.005"/>
    
    <link name="driver_side_mounting_bar">
        <inertial>
            <mass value="${scte_total_mass * 0.02}"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                    ixx="1" ixy="0" ixz="0"
                    iyy="1" iyz="0"
                    izz="1"
            />
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${mounting_bars_length} ${mounting_bars_width} ${mounting_bars_depth}"/>
            </geometry>
            <material name="green"/>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${mounting_bars_length} ${mounting_bars_width} ${mounting_bars_depth}"/>
            </geometry>
        </collision>
    </link>    
    <joint name="shock_tower_front_JOINED_driver_side_mounting_bar" type="fixed">
        <origin xyz="${scte_chassis_length * -0.63} ${shock_tower_width * 0.5} ${shock_tower_height * 0.5}" rpy="0 -0 0"/>
        <parent link="shock_tower_front"/>
        <child link="driver_side_mounting_bar"/>
    </joint>
    
    <link name="passenger_side_mounting_bar">
        <inertial>
            <mass value="${scte_total_mass * 0.02}"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                    ixx="1" ixy="0" ixz="0"
                    iyy="1" iyz="0"
                    izz="1"
            />
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${mounting_bars_length} ${mounting_bars_width} ${mounting_bars_depth}"/>
            </geometry>
            <material name="green"/>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${mounting_bars_length} ${mounting_bars_width} ${mounting_bars_depth}"/>
            </geometry>
        </collision>
    </link>    
    <joint name="shock_tower_front_JOINED_passenger_side_mounting_bar" type="fixed">
        <origin xyz="${scte_chassis_length * -0.63} ${shock_tower_width * -0.5} ${shock_tower_height * 0.5}" rpy="0 -0 0"/>
        <parent link="shock_tower_front"/>
        <child link="passenger_side_mounting_bar"/>
    </joint>      
    <!---->
    <!--/MOUNTING BARS-->
    
    <!--COMPUTER ENCLOSURE-->
    <link name="main_computer_enclosure">
        <inertial>
            <mass value="${scte_total_mass * 0.02}"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                    ixx="1" ixy="0" ixz="0"
                    iyy="1" iyz="0"
                    izz="1"
            />
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.26 0.185 0.06"/>
            </geometry>
            <material name="none">
                <color rgba="${122/255} ${125/255} ${121/255} 0.5"/>
            </material>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.26 0.185 0.06"/>
            </geometry>
        </collision>
    </link>    
    <joint name="main_computer_enclosure_JOINED_driver_side_mounting_bar" type="fixed">
        <origin xyz="0 ${(scte_chassis_width * -0.5) + (mounting_bars_width * 0.5)} ${0.06 * 0.5}" rpy="0 0 0"/>
        <parent link="driver_side_mounting_bar"/>
        <child link="main_computer_enclosure"/>
    </joint>
    <!--/COMPUTER ENCLOSURE-->

    <!--SENSORS-->
    <!---->
    <link name="stereo_camera_bar_support">
        <inertial>
            <mass value="${scte_total_mass * 0.01}"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                    ixx="1" ixy="0" ixz="0"
                    iyy="1" iyz="0"
                    izz="1"
            />
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.01" length="0.06"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.01" length="0.06"/>
            </geometry>
        </collision>
    </link>
    <joint name="stereo_camera_bar_support_JOINED_main_computer_enclosure" type="fixed">
        <origin xyz="${0.260 * -0.45} 0 ${0.06 * 1.0}" rpy="0 0 0"/>
        <parent link="main_computer_enclosure"/>
        <child link="stereo_camera_bar_support"/>
    </joint>

    <link name="stereo_camera_bar">
        <inertial>
            <mass value="${scte_total_mass * 0.01}"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                    ixx="1" ixy="0" ixz="0"
                    iyy="1" iyz="0"
                    izz="1"
            />
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.03 0.202 0.004"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.03 0.202 0.004"/>
            </geometry>
        </collision>
    </link>
    <joint name="stereo_camera_bar_JOINED_stereo_camera_bar_support" type="fixed">
        <origin xyz="0 0 ${0.06 * 0.5}" rpy="0 0 0"/>
        <parent link="stereo_camera_bar_support"/>
        <child link="stereo_camera_bar"/>
    </joint>

    <xacro:include filename="$(find logitech_c270_camera)/urdf/logitech_c270.xacro"/>
    <!--https://answers.ros.org/question/9840/how-do-you-get-stereo_image_proc-to-include-a-frame_id-so-that-rviz-will-accept-the-point-cloud-messages/-->
    <!--stereo projection/point cloud uses the left cameras frame_id to determine how to draw the image-->
    <!-- may need to use image_rect for the video to align with the model
    https://berndpfrommer.github.io/tagslam_web/visualization/
    -->
    <xacro:logitech_c270_camera parent_link="stereo_camera_bar" camera_link="driver_side_camera" joint_xyz="0.0 0.05 ${0.025 * 0.5}" joint_rpy="0 0 0"/>
    <xacro:logitech_c270_camera parent_link="stereo_camera_bar" camera_link="passenger_side_camera" joint_xyz="0.0 -0.05 ${0.025 * 0.5}" joint_rpy="0 0 0"/>

    <!--
    <link name="debug_stereo_perception_camera">
        <inertial>
            <mass value="${scte_total_mass * 0.0001}"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                    ixx="1" ixy="0" ixz="0"
                    iyy="1" iyz="0"
                    izz="1"
            />
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision name='collision'>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>
    <joint name="debug_stereo_perception_camera_JOINED_stereo_camera_bar" type="fixed">
        <origin xyz="0 0.5 0" rpy="${M_PI/-2} 0 ${M_PI/-2}"/>
        <parent link="stereo_camera_bar"/>
        <child link="debug_stereo_perception_camera"/>
    </joint>
    -->
    
    <!--LIDAR-->
    <xacro:include filename="$(find ydlidar_ros)/urdf/ydlidar.urdf"/>    
    <joint name="main_computer_enclosure_JOINED_ydlidar_base" type="fixed">
        <origin xyz="0.090 0 0.0305" rpy="0 0 0"/>
        <parent link="main_computer_enclosure"/>
        <child link="base_laser"/>
    </joint>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <!--robotNamespace>$(arg robot_namespace)</robotNamespace-->
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>

</robot>